---
// Simple loading spinner component
export interface Props {
  size?: 'small' | 'medium' | 'large';
  centered?: boolean;
}

const { size = 'medium', centered = true } = Astro.props;

const sizeClasses = {
  small: 'w-6 h-6',
  medium: 'w-10 h-10',
  large: 'w-16 h-16'
};
---

<div class={`loading-spinner-container ${centered ? 'centered' : ''}`}>
  <div class={`loading-spinner ${sizeClasses[size]}`}>
    <svg class="animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
      <circle 
        class="opacity-25" 
        cx="12" 
        cy="12" 
        r="10" 
        stroke="currentColor" 
        stroke-width="4"
      ></circle>
      <path 
        class="opacity-75" 
        fill="currentColor" 
        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
      ></path>
    </svg>
  </div>
  <p class="loading-text">Cargando productos...</p>
</div>

<style>
  .loading-spinner-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    padding: 2rem;
  }
  
  .loading-spinner-container.centered {
    width: 100%;
    min-height: 200px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .loading-spinner {
    color: var(--maysol-orange); /* Naranja Maysol */
  }
  
  .loading-text {
    color: #6b7280;
    font-size: 0.875rem;
    margin: 0;
  }
  
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  .animate-spin {
    animation: spin 1s linear infinite;
  }
</style>