---
// src/components/ui/ProductCard.astro - Modern design inspired by Next.js version
import { getStrapiMediaUrl, categoryLabels } from '../../lib/strapi';
import type { Product } from '../../lib/strapi';

export interface Props {
  product: Product;
  class?: string;
}

const { product, class: className = '' } = Astro.props;

const { 
  name, 
  short_description, 
  price, 
  unit, 
  category, 
  slug, 
  featured, 
  available, 
  image 
} = product;

// üñºÔ∏è Imagen del producto
const imageUrl = getStrapiMediaUrl(image?.url);
const imageAlt = image?.alternativeText || `${name} - Granjas Maysol`;
const categoryLabel = category ? categoryLabels[category] : '';
const productUrl = `/producto/${slug}`;

// üè∑Ô∏è Badge de categor√≠a
const getCategoryColor = (category?: string) => {
  switch (category?.toLowerCase()) {
    case 'huevos':
      return 'bg-amber-100 text-amber-800';
    case 'gallinas':
      return 'bg-amber-100 text-amber-800';
    case 'cerdos':
      return 'bg-pink-100 text-pink-800';
    case 'alimentos':
      return 'bg-green-100 text-green-800';
    case 'accesorios':
      return 'bg-blue-100 text-blue-800';
    default:
      return 'bg-gray-100 text-gray-800';
  }
};
---

<div class={`bg-card-bg rounded-lg shadow-card overflow-hidden transition-all duration-300 hover:shadow-lg hover:-translate-y-1 border border-gray-100 ${className}`}>
  <!-- üñºÔ∏è Imagen del producto -->
  <div class="relative h-48 bg-gray-100 overflow-hidden">
    {imageUrl ? (
      <img
        src={imageUrl}
        alt={imageAlt}
        loading="lazy"
        class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
        width="300"
        height="200"
      />
    ) : (
      <div class="w-full h-full flex items-center justify-center bg-gray-200">
        <svg 
          class="w-16 h-16 text-gray-400" 
          fill="none" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
        >
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="1" 
            d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" 
          />
        </svg>
      </div>
    )}
    
    <!-- üè∑Ô∏è Badge de categor√≠a -->
    {category && (
      <div class="absolute top-3 left-3">
        <span class={`px-2 py-1 text-xs font-medium rounded-full ${getCategoryColor(category)}`}>
          {categoryLabel}
        </span>
      </div>
    )}
    
    <!-- üü¢ Badge de disponibilidad -->
    <div class="absolute top-3 right-3">
      <span class={`px-2 py-1 text-xs font-medium rounded-full ${available ? 'bg-success/20 text-success' : 'bg-red-100 text-red-800'}`}>
        {available ? 'Disponible' : 'Agotado'}
      </span>
    </div>
  </div>

  <!-- üìù Contenido -->
  <div class="p-6">
    <!-- üìù T√≠tulo -->
    <h3 class="font-semibold text-lg text-dark mb-2 line-clamp-2">
      {name}
    </h3>
    
    <!-- üìÑ Descripci√≥n corta -->
    {short_description && short_description !== "Top 10" && (
      <p class="text-muted text-sm mb-4 line-clamp-2">
        {short_description}
      </p>
    )}
    
    <!-- üí∞ Precio -->
    {price && price !== "Consultar" ? (
      <div class="mb-4">
        <span class="text-2xl font-bold text-primary">
          Q{price}
        </span>
        {unit && (
          <span class="text-sm text-gray-500 ml-1">/ {unit}</span>
        )}
      </div>
    ) : (
      <div class="mb-4">
        <span class="text-lg font-semibold text-primary">
          Consultar precio
        </span>
      </div>
    )}
    
    <!-- üìû Actions -->
    <div class="flex gap-2">
      <a 
        href={productUrl}
        class="flex-1 bg-primary hover:bg-primary/90 text-white py-2 px-4 rounded-lg font-medium transition-colors text-center"
        aria-label={`Ver detalles de ${name}`}
      >
        Ver detalles
      </a>
      
      <button 
        class="bg-[#25d366] hover:bg-[#25d366]/90 text-white p-2 rounded-lg transition-colors whatsapp-product-trigger"
        data-product-name={name}
        data-product-category={categoryLabel}
        aria-label={`Consultar ${name} por WhatsApp`}
        title="Consultar por WhatsApp"
      >
        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
          <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.785"/>
        </svg>
      </button>
    </div>
  </div>
</div>

<style>
  /* Line clamp utilities for text truncation */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script>
  // WhatsApp integration for product cards - Updated for new modal
  document.addEventListener('DOMContentLoaded', () => {
    const productButtons = document.querySelectorAll('.whatsapp-product-trigger');
    
    productButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        
        const productName = button.getAttribute('data-product-name');
        const productCategory = button.getAttribute('data-product-category');
        
        // Show the new WhatsApp modal
        const modal = document.getElementById('whatsapp-modal');
        if (modal) {
          // Pre-select product in modal
          const interestSelect = modal.querySelector('select[name="interest"]') as HTMLSelectElement;
          if (interestSelect) {
            // Try to find matching option or use "Otro"
            const options = Array.from(interestSelect.options);
            const matchingOption = options.find(option => 
              option.value.toLowerCase().includes(productCategory?.toLowerCase() || '') ||
              option.value.toLowerCase().includes(productName?.toLowerCase() || '')
            );
            
            if (matchingOption) {
              interestSelect.value = matchingOption.value;
            } else {
              interestSelect.value = 'Otro';
            }
          }
          
          // Pre-fill message
          const messageTextarea = modal.querySelector('textarea[name="message"]') as HTMLTextAreaElement;
          if (messageTextarea) {
            messageTextarea.value = `Me interesa informaci√≥n detallada sobre: ${productName}${productCategory ? ` (${productCategory})` : ''}`;
          }
          
          // Show modal by removing hidden class
          modal.classList.remove('hidden');
          document.body.style.overflow = 'hidden';
        }
      });
    });
  });
</script>