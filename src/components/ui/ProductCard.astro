---
// src/components/ui/ProductCard.astro - Modern design inspired by Next.js version
import { getStrapiMediaUrl, categoryLabels } from '../../lib/strapi';
import type { Product } from '../../lib/strapi';

export interface Props {
  product: Product;
  class?: string;
  href?: string; // URL personalizada opcional
}

const { product, class: className = '', href } = Astro.props;

const { 
  name, 
  short_description, 
  price, 
  unit, 
  category, 
  slug, 
  featured, 
  available, 
  image 
} = product;

// 🖼️ Imagen del producto
const imageUrl = getStrapiMediaUrl(image?.url);
const imageAlt = image?.alternativeText || `${name} - Granjas Maysol`;
const categoryLabel = category ? categoryLabels[category] : '';
const productUrl = href || `/producto/${slug}`; // Usar href personalizada o slug por defecto

// 🎲 Random availability status
const randomAvailability = Math.random() > 0.3; // 70% chance of being available
const availabilityText = randomAvailability ? 'Disponible' : 'Stock Bajo';
const availabilityColor = randomAvailability ? 'bg-success/20 text-success' : 'bg-amber-100 text-amber-800';

// 📝 Capitalize product name
const capitalizedName = name.toUpperCase();

// 🏷️ Badge de categoría
const getCategoryColor = (category?: string) => {
  switch (category?.toLowerCase()) {
    case 'huevos':
      return 'bg-amber-100 text-amber-800';
    case 'gallinas':
      return 'bg-amber-100 text-amber-800';
    case 'cerdos':
      return 'bg-pink-100 text-pink-800';
    case 'alimentos':
      return 'bg-green-100 text-green-800';
    case 'accesorios':
      return 'bg-blue-100 text-blue-800';
    default:
      return 'bg-gray-100 text-gray-800';
  }
};
---

<a href={productUrl} class={`block bg-card-bg rounded-lg shadow-card overflow-hidden transition-all duration-300 hover:shadow-lg hover:-translate-y-1 border border-gray-100 cursor-pointer w-[240px] h-[320px] ${className}`}>
  <!-- 🖼️ Imagen del producto -->
  <div class="relative h-[224px] bg-gray-100 overflow-hidden">
    {imageUrl ? (
      <img
        src={imageUrl}
        alt={imageAlt}
        loading="lazy"
        class="w-full h-full object-contain"
        width="300"
        height="200"
      />
    ) : (
      <div class="w-full h-full flex items-center justify-center bg-gray-200">
        <svg 
          class="w-12 h-12 text-gray-400" 
          fill="none" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
        >
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="1" 
            d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" 
          />
        </svg>
      </div>
    )}    
    
  </div>

  <!-- 📝 Contenido -->
  <div class="p-3 flex flex-col h-[96px]">
    <!-- 📝 Título -->
    <h3 class="font-bold text-sm text-dark mb-1 line-clamp-1 uppercase">
      {capitalizedName}
    </h3>
    
    <!-- 🏷️ Categoría -->
    {category && (
      <p class="text-gray-500 text-xs mb-1">
        {categoryLabel}
      </p>
    )}
    
    <!-- 🎯 Disponibilidad -->
    <div class="mt-auto">
      <div class="flex items-center gap-2">
        <span class={`px-2 py-0.5 text-xs font-medium rounded-full ${availabilityColor}`}>
          {availabilityText}
        </span>
      </div>
    </div>
  </div>
</a>

<style>
  /* Line clamp utilities for text truncation */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

