---
import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/layout/Navbar.astro';
import WhatsAppModal from '../../components/ui/WhatsAppModal.astro';
import FloatingWhatsAppButton from '../../components/ui/FloatingWhatsAppButton.astro';
import { getProductBySlug, getStrapiMediaUrl, categoryLabels } from '../../lib/strapi';

// Get the slug from the URL
const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/productos');
}

// Fetch the product
const product = await getProductBySlug(slug);

if (!product) {
  return Astro.redirect('/productos');
}

const {
  name,
  description,
  short_description,
  price,
  unit,
  category,
  featured,
  available,
  technical_info,
  usage_instructions,
  image,
  images,
  seo_title,
  seo_description,
  seo_keywords,
  og_title,
  og_description,
  og_image
} = product;

// Prepare images for gallery
const mainImage = image;
const galleryImages = images || [];
const allImages = mainImage ? [mainImage, ...galleryImages] : galleryImages;

// Category info
const categoryLabel = category ? categoryLabels[category] : '';

// SEO - Use Strapi SEO fields or fallbacks
const pageTitle = seo_title || `${name} - Granjas Maysol`;
const pageDescription = seo_description || short_description || `${name} - Producto de alta calidad de Granjas Maysol. ${categoryLabel ? `Categoría: ${categoryLabel}.` : ''} Contáctanos para más información.`;
const pageImage = getStrapiMediaUrl(og_image?.url || mainImage?.url);
const metaKeywords = seo_keywords;
const ogTitle = og_title || pageTitle;
const ogDescription = og_description || pageDescription;

export const prerender = false;
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  image={pageImage}
  keywords={metaKeywords}
  ogTitle={ogTitle}
  ogDescription={ogDescription}
>
  <Navbar />
  
  <main class="min-h-screen bg-base-100">
    <!-- Breadcrumbs -->
    <div class="bg-base-200 py-4">
      <div class="container-global">
        <div class="breadcrumbs text-sm">
          <ul>
            <li><a href="/">Inicio</a></li>
            <li><a href="/productos">Productos</a></li>
            <li class="font-semibold">{name}</li>
          </ul>
        </div>
      </div>
    </div>

    <!-- Product Detail -->
    <section class="py-12">
      <div class="container-global">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
          
          <!-- Image Gallery -->
          <div class="space-y-4">
            {allImages.length > 0 ? (
              <>
                <!-- Main Image -->
                <div class="aspect-square rounded-lg overflow-hidden bg-gray-100">
                  <img 
                    id="main-product-image"
                    src={getStrapiMediaUrl(allImages[0].url)}
                    alt={allImages[0].alternativeText || name}
                    class="w-full h-full object-cover"
                    width="600"
                    height="600"
                  />
                </div>

                <!-- Thumbnail Gallery -->
                {allImages.length > 1 && (
                  <div class="flex gap-2 overflow-x-auto pb-2">
                    {allImages.map((img, index) => (
                      <button 
                        class="thumbnail-btn flex-shrink-0 w-20 h-20 rounded-lg overflow-hidden bg-gray-100 border-2 border-transparent hover:border-primary transition-colors"
                        data-image={getStrapiMediaUrl(img.url)}
                        data-alt={img.alternativeText || name}
                        data-active={index === 0}
                      >
                        <img 
                          src={getStrapiMediaUrl(img.url)}
                          alt={`${name} - Imagen ${index + 1}`}
                          class="w-full h-full object-cover"
                          width="80"
                          height="80"
                        />
                      </button>
                    ))}
                  </div>
                )}
              </>
            ) : (
              <!-- Placeholder Image -->
              <div class="aspect-square rounded-lg bg-gray-200 flex items-center justify-center">
                <div class="text-center text-gray-500">
                  <svg class="w-16 h-16 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                  <span>Sin imagen</span>
                </div>
              </div>
            )}
          </div>

          <!-- Product Info -->
          <div class="space-y-6">
            
            <!-- Header -->
            <div>
              <div class="flex items-start justify-between mb-4">
                <div>
                  {category && (
                    <span class="badge badge-secondary badge-lg mb-2">{categoryLabel}</span>
                  )}
                  <h1 class="text-3xl lg:text-4xl font-bold">{name}</h1>
                </div>
                
                <div class="flex flex-col items-end gap-2">
                  {featured && (
                    <span class="badge badge-primary">Destacado</span>
                  )}
                  {!available && (
                    <span class="badge badge-warning">No disponible</span>
                  )}
                </div>
              </div>

              {price && (
                <div class="flex items-baseline gap-2 mb-4">
                  <span class="text-3xl font-bold text-primary">Q{price}</span>
                  {unit && (
                    <span class="text-lg text-gray-500">/ {unit}</span>
                  )}
                </div>
              )}
            </div>

            <!-- Short Description -->
            {short_description && short_description !== "Top 10" && (
              <div class="bg-base-200 p-4 rounded-lg">
                <p class="text-lg">{short_description}</p>
              </div>
            )}

            <!-- Actions -->
            <div class="flex flex-col sm:flex-row gap-4">
              <button 
                id="product-whatsapp-btn"
                class="btn btn-success btn-lg flex-1"
                data-product-name={name}
                data-product-category={categoryLabel}
              >
                <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12.031 6.172c-3.181 0-5.767 2.586-5.768 5.766-.001 1.298.38 2.27 1.019 3.287l-.582 2.128 2.182-.573c.978.58 1.911.928 3.145.929 3.178 0 5.767-2.587 5.768-5.766.001-3.187-2.575-5.77-5.764-5.771zm3.392 8.244c-.144.405-.837.774-1.17.824-.299.045-.677.063-1.092-.069-.252-.08-.575-.187-.988-.365-1.739-.751-2.874-2.502-2.961-2.617-.087-.116-.708-.94-.708-1.793s.448-1.273.607-1.446c.159-.173.346-.217.462-.217l.332.006c.106.005.249-.04.39.298.144.347.491 1.2.534 1.287.043.087.072.188.014.304-.058.116-.087.188-.173.289l-.26.304c-.087.086-.177.18-.076.354.101.174.449.741.964 1.201.662.591 1.221.774 1.394.86s.274.072.376-.043c.101-.116.433-.506.549-.68.116-.173.231-.145.39-.087s1.011.477 1.184.564.289.13.332.202c.045.072.045.419-.1.824z"/>
                </svg>
                Consultar por WhatsApp
              </button>
              
              <a 
                href="/productos" 
                class="btn btn-outline btn-lg"
              >
                Ver más productos
              </a>
            </div>

            <!-- Description -->
            {description && (
              <div class="prose max-w-none">
                <h3 class="text-xl font-bold mb-3">Descripción</h3>
                <div class="bg-base-100 border border-base-300 rounded-lg p-4">
                  <div id="product-description">
                    <!-- Strapi blocks content will be rendered here -->
                    <p class="text-gray-600 italic">Cargando descripción...</p>
                  </div>
                </div>
              </div>
            )}

            <!-- Technical Info -->
            {technical_info && (
              <div class="prose max-w-none">
                <h3 class="text-xl font-bold mb-3">Información Técnica</h3>
                <div class="bg-base-100 border border-base-300 rounded-lg p-4">
                  <div id="technical-info">
                    <p class="text-gray-600 italic">Cargando información técnica...</p>
                  </div>
                </div>
              </div>
            )}

            <!-- Usage Instructions -->
            {usage_instructions && (
              <div class="prose max-w-none">
                <h3 class="text-xl font-bold mb-3">Instrucciones de Uso</h3>
                <div class="bg-base-100 border border-base-300 rounded-lg p-4">
                  <div id="usage-instructions">
                    <p class="text-gray-600 italic">Cargando instrucciones...</p>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- WhatsApp Components -->
  <WhatsAppModal />
  <FloatingWhatsAppButton />
</Layout>

<script define:vars={{ description, technical_info, usage_instructions, name, categoryLabel }}>
  // Gallery functionality
  document.addEventListener('DOMContentLoaded', () => {
    const mainImage = document.getElementById('main-product-image');
    const thumbnails = document.querySelectorAll('.thumbnail-btn');
    
    thumbnails.forEach(btn => {
      btn.addEventListener('click', () => {
        const newImage = btn.getAttribute('data-image');
        const newAlt = btn.getAttribute('data-alt');
        
        if (mainImage && newImage) {
          mainImage.src = newImage;
          mainImage.alt = newAlt || name;
        }
        
        // Update active thumbnail
        thumbnails.forEach(thumb => {
          thumb.classList.remove('border-primary');
          thumb.classList.add('border-transparent');
        });
        btn.classList.remove('border-transparent');
        btn.classList.add('border-primary');
      });
    });
    
    // WhatsApp button functionality
    document.getElementById('product-whatsapp-btn')?.addEventListener('click', () => {
      const modal = document.getElementById('whatsapp-modal');
      if (modal) {
        // Pre-fill the form
        const interestSelect = modal.querySelector('select[name="interest"]');
        if (interestSelect) {
          const options = Array.from(interestSelect.options);
          const matchingOption = options.find(option => 
            option.value.toLowerCase().includes(categoryLabel?.toLowerCase() || '') ||
            option.value.toLowerCase().includes(name?.toLowerCase() || '')
          );
          
          if (matchingOption) {
            interestSelect.value = matchingOption.value;
          } else {
            interestSelect.value = 'Otro (especificar en mensaje)';
          }
        }
        
        const messageTextarea = modal.querySelector('textarea[name="message"]');
        if (messageTextarea) {
          messageTextarea.value = `Me interesa información detallada sobre: ${name}${categoryLabel ? ` (${categoryLabel})` : ''}`;
        }
        
        modal.showModal();
      }
    });

    // Render Strapi blocks content (simplified version)
    const renderBlocks = (blocks, containerId) => {
      const container = document.getElementById(containerId);
      if (!container || !blocks) return;
      
      let html = '';
      blocks.forEach(block => {
        switch (block.type) {
          case 'paragraph':
            html += `<p>${block.children.map(child => child.text).join('')}</p>`;
            break;
          case 'heading':
            const level = block.level || 2;
            html += `<h${level}>${block.children.map(child => child.text).join('')}</h${level}>`;
            break;
          case 'list':
            const listType = block.format === 'ordered' ? 'ol' : 'ul';
            html += `<${listType}>`;
            block.children.forEach(item => {
              html += `<li>${item.children.map(child => child.text).join('')}</li>`;
            });
            html += `</${listType}>`;
            break;
          default:
            if (block.children) {
              html += `<p>${block.children.map(child => child.text || '').join('')}</p>`;
            }
        }
      });
      
      container.innerHTML = html || '<p class="text-gray-500">Sin información disponible</p>';
    };

    // Render content blocks
    if (description) renderBlocks(description, 'product-description');
    if (technical_info) renderBlocks(technical_info, 'technical-info');
    if (usage_instructions) renderBlocks(usage_instructions, 'usage-instructions');
  });
</script>

<style>
  .prose {
    max-width: none;
  }
  
  .prose h3 {
    margin-top: 0;
  }
  
  .prose p:last-child {
    margin-bottom: 0;
  }
  
  .thumbnail-btn[data-active="true"] {
    border-color: hsl(var(--p));
  }
</style>